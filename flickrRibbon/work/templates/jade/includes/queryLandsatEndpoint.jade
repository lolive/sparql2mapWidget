script.
 var kmlLayer;
 var extractKmlString = function(kmlId){
  var defer = $.Deferred();
  var kmlString=(new XMLSerializer()).serializeToString(document.getElementById(kmlId));
  defer.resolve(kmlString);
  return defer;
 }

 var uppercaseElements = function(string, elementNames){
   var uppercasedString = string;
   elementNames.forEach( function(elementName) {
    uppercasedString=uppercasedString.replace(new RegExp(elementName.toLowerCase(), 'g'), elementName);
   });
   return uppercasedString;
 }

 var uppercaseKmlElements = function(kmlString){
  var defer = $.Deferred();
  var elementnames = [ 'Point', 'GroundOverlay', 'Document', 'LatLonBox', 'Camera', 'Icon', 'Placemark' ];
  var validKmlString = uppercaseElements(kmlString, elementnames);
  defer.resolve(validKmlString);
  return defer;
 }

 var sendToGE = function(kmlString){
  var defer = $.Deferred();
  if(ge) {
   var kmlObject = ge.parseKml(kmlString);
   ge.getFeatures().appendChild(kmlObject);
   ge.getView().setAbstractView(kmlObject.getAbstractView());
   defer.resolve(kmlObject);
   return defer;
  }
 }

 var removeOlderKml = function(actualKmlObject){
  var defer = $.Deferred();
  if(kmlLayer)
   ge.getFeatures().removeChild(kmlLayer);
  defer.resolve(actualKmlObject);
  return defer;
 }

 var setAsCurrentKml = function(actualKmlObject){
    kmlLayer = actualKmlObject;
 }

 window.Bus.subscribe('LongLatCalculated', function(longLat) {
 var longitude = longLat.long;
 var latitude = longLat.lat;
 
 var myquery='CONSTRUCT { ?PathRow0 <http://toto/#bottomBoundary> ?BottomBoundary .  ?PathRow0 <http://toto/#topBoundary> ?TopBoundary .  ?PathRow0 <http://toto/#leftBoundary> ?LeftBoundary .  ?satelliteImage1 <http://toto/#when> ?when10 . ?satelliteImage1 <http://toto/#pathRow> ?PathRow0 .  ?PathRow0 <http://toto/#rightBoundary> ?RightBoundary .  ?satelliteImage1 <http://toto/#sensor> ?Sensor6 .  ?satelliteImage1 <http://toto/#fileid> ?Fileid7 .  ?PathRow0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://toto/#PathRow> .  ?satelliteImage1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://toto/#satelliteImage> .  } WHERE { GRAPH <http://toto/#> { ?PathRow0 <http://toto/#bottomBoundary> ?BottomBoundary2 .  ?PathRow0 <http://toto/#topBoundary> ?TopBoundary3 .  ?PathRow0 <http://toto/#leftBoundary> ?LeftBoundary4 .  ?satelliteImage1 <http://toto/#when> ?when10 .  ?satelliteImage1 <http://toto/#pathRow> ?PathRow0 .  ?PathRow0 <http://toto/#rightBoundary> ?RightBoundary5 .  ?satelliteImage1 <http://toto/#sensor> ?Sensor6 .  ?satelliteImage1 <http://toto/#fileid> ?Fileid7 .  ?PathRow0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://toto/#PathRow> .  ?satelliteImage1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://toto/#satelliteImage> . FILTER (?Sensor6 = "l8oli") .  FILTER (?RightBoundary5 > '+longitude+') . FILTER (?LeftBoundary4 < '+longitude+') .   FILTER (?TopBoundary3 > '+latitude+') . FILTER (?BottomBoundary2 < '+latitude+' )  . BIND (str(?TopBoundary3) as ?TopBoundary)  . BIND (str(?BottomBoundary2) as ?BottomBoundary)  . BIND (str(?LeftBoundary4) as ?LeftBoundary)  . BIND (str(?RightBoundary5) as ?RightBoundary) } }';
 var myendpoint='http://sitools.akka.eu:8889/sparql/';
 
 sparqlQueryJson(
  myquery,
  myendpoint,
  function(res){
   parseN3(res);
   $('.satelliteImage').click(function() {
    var kmlId=this.attributes.href.value;
    extractKmlString(kmlId).then(uppercaseKmlElements).then(sendToGE).then(removeOlderKml).then(setAsCurrentKml);
    var latlonbox = $("document groundoverlay latlonbox", document.getElementById(kmlId));
    window.Bus.publish('BordersCalculated', 
     { "left":$("west", latlonbox).text(),
      "right":$("east", latlonbox).text(),
      "top":$("north", latlonbox).text(),
      "bottom":$("south", latlonbox).text() }
    );
   });
  }  
 )
 });
 
